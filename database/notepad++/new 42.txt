{
    "template_name" : "admin details",
    "data" : [
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "admin_name"
        },
        {
            "validation_id" : 9,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "admin_code"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "admin_contact"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "admin_email"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "admin_address"
        },
        {
            "validation_id" : 6,
            "data_type_id" : 2,
            "is_mandatory" : 1,
            "field_name" : "admin_role"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "admin_reporting_manager"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "admin_department_name"
        }
    ]
}






{
    "template_name" : "employee details",
    "data" : [
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_fname"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_lname"
        },
        {
            "validation_id" : 9,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_code"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_contact"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_department"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 4,
            "is_mandatory" : 1,
            "field_name" : "employee_dob"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 4,
            "is_mandatory" : 1,
            "field_name" : "employee_doj"
        },
        {
            "validation_id" : 6,
            "data_type_id" : 5,
            "is_mandatory" : 1,
            "field_name" : "employee_salary"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "employee_email"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "employee_address"
        },
        {
            "validation_id" : 2,
            "data_type_id" : 9,
            "is_mandatory" : 1,
            "field_name" : "employee_acc_no"
        },
        {
            "validation_id" : 2,
            "data_type_id" : 9,
            "is_mandatory" : 1,
            "field_name" : "employee_ifsc_code"
        },
        {
            "validation_id" : 2,
            "data_type_id" : 9,
            "is_mandatory" : 1,
            "field_name" : "employee_aadhar_card"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 9,
            "is_mandatory" : 1,
            "field_name" : "employee_experience_level"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "employee_department_name"
        }
    ]
}



{
    "template_name" : "seller details",
    "data" : [
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "vendor_name"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "vendor_shop_name"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "vendor_contact"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "vendor_email"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "vendor_address"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "vendor_landmark"
        },
        {
            "validation_id" : 10,
            "data_type_id" : 11,
            "is_mandatory" : 1,
            "field_name" : "vendor_address_proof"
        },
        {
            "validation_id" : 8,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "vendor_fax"
        }
    ]
}


{
    "template_name" : "orgnization details",
    "data" : [
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "orgnization_name"
        },
        {
            "validation_id" : 9,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "orgnization_code"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "orgnization_contact"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "orgnization_email"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "orgnization_address"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "orgnization_department_name"
        }
    ]
}




{
    "template_name" : "account details",
    "data" : [
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "account_fname"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "account_lname"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 1,
            "is_mandatory" : 1,
            "field_name" : "account_contact"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "account_email"
        },
        {
            "validation_id" : 1,
            "data_type_id" : 8,
            "is_mandatory" : 1,
            "field_name" : "account_address"
        },
        {
            "validation_id" : 6,
            "data_type_id" : 2,
            "is_mandatory" : 1,
            "field_name" : "account_number"
        }
    ]
}






 'template_id' => $template->id,
                        return $template;
                        $data = [
                            'validation_id' => $template->templateField->validation_id,
                            'data_type_id' => $template->templateField->data_type_id,
                            'field_name' => $template->templateField->field_name,
                            'is_mandatory' => $template->templateField->is_mandatory,
                        ];
                        $details = $data;

                        return $details;






{
    "id": 5,
    "templete_name": "account details",
    "template_field": [
        {
            "id": 37,
            "template_name_id": 5,
            "field_name": "account_fname",
        },
        {
            "id": 38,
            "template_name_id": 5,
            "field_name": "account_lname",
        },
        {
            "id": 39,
            "template_name_id": 5,
            "field_name": "account_contact",
        },
        {
            "id": 40,
            "template_name_id": 5,
            "field_name": "account_email",
        },
        {
            "id": 41,
            "template_name_id": 5,
            "field_name": "account_address",
        },
        {
            "id": 42,
            "template_name_id": 5,
            "field_name": "account_number",
        }
    ]
}

model --
class TemplatePayloadData extends Model {
    use HasFactory, SoftDeletes;

    protected $table = 'template_payload_data';

    protected $guarded = [];

    public function templatePayloadDetails() {
        return $this->belongsTo(TemplateName::class, 'template_name_id', 'id');
    }

    protected $casts = [
        'data' => 'array'
    ];
}


controller --
public function payloadDataSave (Request $request) {
	$templateNameRecord = TemplateName::when($request->has('template_id'), function($query) use ($request) {
		$query->whereHas('templateField', function($q) use ($request) {
			$q->where('template_name_id', $request->template_id);
		});
	})->with('templateField')->get();

	if(!empty($templateNameRecord)) {
		try{
			foreach($templateNameRecord as $key => &$template) {
				foreach($template->templateField as $field) {
					$templateField = [
						'field_name' => $field->field_name,
					];
				}
			}

			$payloadDetails = new TemplatePayloadData();
			$payloadDetails->template_name_id = $request->template_id;
			$payloadDetails->data = $templateField; // this get array data 
			$payloadDetails->created_at = now() ?? NULL;
			$payloadDetails->updated_at = now() ?? NULL;
			$payloadDetails->save();

		} catch (Exception $e) { 
			return response()->json([
				'status' => false,
				'errors' => $e->getMessage()
			]);
		}   
	} else {
		return response()->json([
		'status' => false,
		'message' => 'Template id is not found, please you can check template id is manually.',
		]);
	}
}

                        foreach($templateNameRecord as $key => &$template) {
                            foreach($template->templateField as $field) {
                                $templateId = [
                                    'template_name_id' => $field->template_name_id,
                                ];
                            }
                            foreach($template->templateField as $field) {
                                $templateField = [
                                    'field_name' => $field->field_name,
                                ];
                            }
                            return [$templateId, $templateField];
                        }

                        $payloadDetails = new TemplatePayloadData();
                        $payloadDetails->template_name_id = $request->template_id;
                        $payloadDetails->data = $request->data;
                        $payloadDetails->created_at = now() ?? NULL;
                        $payloadDetails->updated_at = now() ?? NULL;
                        $payloadDetails->save();




all field_name record store in $payloadDetails->data as a array form using laravel



                        foreach ($templateNameRecord as $template) {
                            $templateFieldData = [];
                            foreach ($template->templateField as $field) {
                                $templateFieldData[$field->field_name] = $request->input($field->field_name);
                            }
                            $payloadDetails = new TemplatePayloadData();
                            $payloadDetails->template_name_id = $template->id;
                            $payloadDetails->data = $templateFieldData;
                            $payloadDetails->save();
                        }

                        return response()->json([
                            'status' => true,
                            'data' => "Payload details successfully created",
                        ]);



                        foreach ($templateNameRecord as $template) {
                            $templateFieldDetails = [];
                            foreach($template->templateField as $field) {
                                if($request->has('payload')) {
                                    $templateFieldDetails[$field->field_name] = $request->input($field->field_name);
                                }
                            }
                            $payloadDetailSave = new TemplatePayloadData();
                            $payloadDetailSave->template_name_id = $request->template_id;
                            $payloadDetailSave->data             = $templateFieldDetails;
                            $payloadDetailSave->status           = 1;
                        }





{
    "template_id": 5,
    "payload":{
        "account_fname":"abhishek",
        "account_lname":"kumar",
        "account_contact":"9415058209",
        "account_email":"annaaryan98@gmail.com",
        "account_address":"New Delhi",
        "account_number":"56329865485"
    }
}


{
    "template_id": 5,
    "payload":{
        "account_fname":"aryan",
        "account_lname":"kumar",
        "account_contact":"8400000464",
        "account_email":"annaaryan98@gmail.com",
        "account_address":"Navi Mumbai",
        "account_number":"56329865485"
    }
}


template_id:4
account_fname:abhishek
account_lname:kumar
account_contact:9415058209
account_email:annaaryan98@gmail.com
account_address:New Delhi
account_number:56329865485










This is my postman row data
{
    "template_id": 4,
    "payload": {
        "vendor_name": null,
        "vendor_shop_name": null,
        "vendor_contact": null,
        "vendor_email": null,
        "vendor_address": null,
        "vendor_landmark": null,
        "vendor_address_proof": null,
        "vendor_fax": null
    }
}


$rules = [
	'data' => ['required' => function($model, $error) {
		$validationPass = Validation::where('status', 1)->where('is_mandatory', 1)->get();
	}],

	'field_name' => 'exists:template_field_details,id',
	'template_id' => 'required|exists:template_names,id',
];

$message = [
	'data.array' => 'Data field is like array, please use the valid data type',
	'field_name.*' => 'Field name must be exist in template field table, please check field name manually',
	'template_id' => 'Template id field is required, please select a template id'
];

$validator = Validator::make($request->all(), $rules, $message);

if($validator->fails()) {
	return response()->json([
		'errors' => $validator->errors()
	]);

} else {
	$templateNameRecord = TemplateName::when($request->has('template_id'), function($query) use ($request) {
		$query->whereHas('templateField', function($q) use ($request) {
			$q->where('template_name_id', $request->template_id);
		});
	})->with('templateField')->get();

	if(!empty($templateNameRecord)) {
		try{
			if($request->has('payload')) {
				$templatePayloadFieldData = [];
				foreach($request->payload as $key => $value) {
					$templatePayloadFieldData[$key] = $value;

				}
				foreach($templateNameRecord as $key => $value) {
					$templatePayloadFieldDataId = $value->id;
				}
				$payloadDetails = new TemplatePayloadData();
				$payloadDetails->template_name_id = $templatePayloadFieldDataId;
				$payloadDetails->data = $templatePayloadFieldData;
				$payloadDetails->save();

			} else {
				foreach ($templateNameRecord as $template) {
					$templateFieldData = [];
					foreach ($template->templateField as $key => $field) {
						if(!array_key_exists($field->field_name, $request->payload)) {
							$templateFieldData[$field->field_name] = $request->input($field->field_name);
							return response()->json([
								'status' => false,
								'message' => 'Please fill all template fields.',
							]);
						} 
					}

					$payloadDetails = new TemplatePayloadData();
					$payloadDetails->template_name_id = $template->id;
					$payloadDetails->data = $templateFieldData;
					// $payloadDetails->save();
				}
			}

			return response()->json([
				'status' => true,
				'data' => "Payload details successfully created",
			]);

		} catch (Exception $e) { 
			return response()->json([
				'status' => false,
				'errors' => $e->getMessage()
			]);
		}
	} else {
		return response()->json([
		'status' => false,
		'message' => 'Template id is not found, please you can check template id is manually.',
		]);
	}
}


if user not set proper field name on that basis getting error for please fill valid fields using laravel api




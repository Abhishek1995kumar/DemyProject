<?php

namespace App\Http\Controllers;
use Log;
use Illuminate\Http\Request;
use App\Models\MasterEmployers;
use App\Models\MasterDefaultPassword;
use Illuminate\Support\Facades\Validator;
use App\Models\EmployerDefaultPasswordConfigurator;
use App\Http\Resources\MasterDefaultPasswordResource;
use App\Http\Resources\EmployerDefaultPasswordResource;
use App\Traits\EmployerDefaultPasswordConfiguratorTrait;
class EmployerDefaultPasswordConfiguratorController extends Controller {
    use EmployerDefaultPasswordConfiguratorTrait;
    public function masterDefaultPassword(){
        try{
            return response()->json([
                "status"=> true,
                "data"  => $this->masterDefaultPasswordTrait()
            ]);
        }catch (\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",
            ]);
        }
    }

    public function saveDefaultPasswordDetails(Request $request) {
        try{    
            return response()->json([
                "status"=> true,
                "data"  => $this->saveDefaultPasswordDetailsTrait($request)
            ]);
        }catch (\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",,
            ]);
        }
    }

    public function showDefaultPasswordDetails(Request $request){
        try{
            return response()->json([
                "status"=> true,
                "data"  => $this->showDefaultPasswordDetailsTrait($request)
            ]);
        }catch (\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",
            ]);
        }
    }

    public function updateEmployerDefaultPasswordDetails(Request $request, $id){
        try{
            return response()->json([
                "status"=> true,
                "data"  => $this->updateEmployerDefaultPasswordDetailsTrait($request, $id)
            ]);
        }catch (\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",
            ]);
        }
    }

    public function deleteEmployerDefaultPasswordDetails(Request $request) {
        try{
            return response()->json([
                "status"=> true,
                "data"=> $this->deleteEmployerDefaultPasswordDetailsTrait($request)
            ]);
        }catch (\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",
            ]);
        }
    }

    public function restoreEmployerDetails(Request $request) {
        try{
            return response()->json([
                "status"=> true,
                "data"=> $this->restoreEmployerDetailsTrait($request)
            ]);
        }catch(\Exception $e){
            return response()->json([
                'status' => false,
                'message'=> "function failed !!",
            ]);
        }
    }
}
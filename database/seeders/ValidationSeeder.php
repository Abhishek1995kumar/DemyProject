<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
class ValidationSeeder extends Seeder {
    public function run() {
        DB::table('validations')->truncate();
        DB::table('validations')->insert([
            array(
                "validation_name" => "string type validation ",
                "validation_value" => 'string',
                "is_mandatory" => 1,
                'comments' => 'The field under validation must be entirely Unicode alphabetic characters contained ',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "alpha_num type validation ([a-zA-Z_]{2,})([0-9]{1,})",
                "validation_value" => 'alpha_num',
                "is_mandatory" => 1,
                'comments' => 'The field under validation must be entirely Unicode alpha-numeric characters contained ',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "array type validation",
                "validation_value" => 'array',
                "is_mandatory" => 1,
                'comments' => 'When additional values are provided to the array rule, each key in the input array must be present within the list of values provided to the rule',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            // array(
            //     "validation_name" => "current_password type validation",
            //     "validation_value" => "([%&.\/@}{)(!]{0,})([a-zA-Z_]{1,})([%&.\/@}{)(!]{0,})([0-9]{0,})",
            //     "is_mandatory" => 1,
            //     'comments' => 'The field under validation must match the authenticated users password',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            // array(
            //     "validation_name" => "dimensions type validation",
            //     "validation_value" => 'dimensions',
            //     "is_mandatory" => 1,
            //     'comments' => 'The file under validation must be an image meeting the dimension constraints as specified by the rules parameters ex(dimensions:min_width=100,min_height=200)',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            array(
                "validation_name" => "email type validation ([a-zA-Z_]{2,})([0-9]{0,})([@]{1})([a-z]{3,})([.]{1})([a-z]{2,20})",
                "validation_value" => 'email',
                "is_mandatory" => 2,
                'comments' => 'The field under validation must be formatted as an email address ex(email:rfc,dns) rfc: RFCValidation, dns: DNSCheckValidation',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            // array(
            //     // use Illuminate\Validation\Rules\Enum;
            //     "validation_name" => "enum type validation",
            //     "validation_value" => 'enum',
            //     "is_mandatory" => 2,
            //     'comments' => 'The Enum rule is a class based rule that validates whether the field under validation contains a valid enum value ex("status" =>[new Enum(ServerStatus::class)])',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            // array(
            //     "validation_name" => "file type validation",
            //     "validation_value" => 'file',
            //     "is_mandatory" => 2,
            //     'comments' => 'The field under validation must be a successfully uploaded file',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            // array(
            //     "validation_name" => "regex type validation",
            //     "validation_value" => 'regex:/([a-zA-Z]{1,10})([0-9]{1,10})/',
            //     "is_mandatory" => 1,
            //     'comments' => '([a-zA-Z]{1,10})([0-9]{1,10}) - atleast one alphabate and after atleast one numeric character accepted',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            // array(
            //     "validation_name" => "mimes type validation",
            //     "validation_value" => 'mimes:png,jpeg,jpg',
            //     "is_mandatory" => false,
            //     'comments' => 'The file under validation must have a MIME type corresponding to one of the listed extensions ex(mimes:jpg,bmp,png)',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            // array(
            //     "validation_name" => "mimetypes type validation",
            //     "validation_value" => 'mimetypes',
            //     "is_mandatory" => false,
            //     'comments' => 'The file under validation must match one of the given MIME types ex(mimetypes:video/avi,video/mpeg,video/quicktime)',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            array(
                "validation_name" => "min type validation",
                "validation_value" => 'min',
                "is_mandatory" => true,
                'comments' => 'The field under validation must have a minimum value. Strings, numerics, arrays, and files ex(min:0 or any)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "nullable type validation",
                "validation_value" => 'nullable',
                "is_mandatory" => true,
                'comments' => 'The field under validation may be null ex(nullable)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "numeric type validation",
                "validation_value" => 'numeric',
                "is_mandatory" => true,
                'comments' => 'The field under validation must be numeric. ex(numeric)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "required type validation",
                "validation_value" => 'required',
                "is_mandatory" => true,
                'comments' => 'The field under validation must be present in the input data and not empty ex(required)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "size:any number type validation",
                "validation_value" => 'size',
                "is_mandatory" => false,
                'comments' => 'The field under validation must have a size matching the given value ex(size:12)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "sometimes type validation",
                "validation_value" => 'sometimes',
                "is_mandatory" => false,
                'comments' => 'In some situations, you may wish to run validation checks against a field only if that field is present in the data being validated ex(sometimes)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "unique type validation",
                "validation_value" => 'unique',
                "is_mandatory" => 2,
                'comments' => 'The field under validation must not exist within the given database table. ex(unique:App\Models\User,email_address or unique:users,email)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            // array(
            //     "validation_name" => "string type validation",
            //     "validation_value" => 'string',
            //     "is_mandatory" => 1,
            //     'comments' => 'The field under validation must string in the given database table. ex(string)',
            //     "status" => 1,
            //     "created_at" => now(),
            //     "updated_at" => now(),
            //     "deleted_at" => NULL,
            // ),
            array(
                "validation_name" => "max type validation",
                "validation_value" => 'max',
                "is_mandatory" => 1,
                'comments' => 'The field under validation must maximum value in the given database table. ex(max:255 or any no)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "boolean type validation",
                "validation_value" => 'boolean',
                "is_mandatory" => 2,
                'comments' => 'The field under validation must boolean in the given database table. ex(boolean or any no)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "date type validation",
                "validation_value" => 'date',
                "is_mandatory" => 2,
                'comments' => 'The field under validation must date in the given database table. ex(date)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
            array(
                "validation_name" => "exists type validation",
                "validation_value" => 'exists',
                "is_mandatory" => 2,
                'comments' => 'The field under validation must be exists in the given database table. ex(exists)',
                "status" => 1,
                "created_at" => now(),
                "updated_at" => now(),
                "deleted_at" => NULL,
            ),
        ]);
    }
}
